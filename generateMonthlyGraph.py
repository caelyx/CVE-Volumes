#!/usr/bin/env python3
"Generate graph of vulnerabilities published per month, based on monthly_stats.csv."

import matplotlib as mpl
import matplotlib.pyplot as plt
import pandas as pd

years = []
yearCrit = []
yearTotal = []

with open("monthly_stats.csv") as f:
    for (year, crit, tot) in [line.split(",") for line in f]:
        years.append(year)
        yearCrit.append(int(crit))
        yearTotal.append(int(tot))

## Combined graph

# df = pd.DataFrame({"Critical CVEs": yearCrit[:-1], "Total CVEs": yearTotal[:-1]}, index=years[:-1])
# ax = df[["Critical CVEs"]].plot.line(
#     title="CVEs published each month", color="darkred", linestyle="-", secondary_y=False
# )
# ax = df[["Total CVEs"]].plot.line(
#     color="grey", use_index=False, ax=ax  # , secondary_y=True, linestyle="dotted",
# )
# ax.yaxis.set_major_formatter(mpl.ticker.StrMethodFormatter("{x:,.0f}"))
# # ax.right_ax.yaxis.set_major_formatter(mpl.ticker.StrMethodFormatter("{x:,.0f}"))
# ax.get_figure().savefig("monthly_graph.png", dpi=300)


## Subplot format

df = pd.DataFrame({"Critical CVEs": yearCrit[:-1], "Total CVEs": yearTotal[:-1]}, index=years[:-1])

fig, axes = df.plot.line(
    title="CVEs published each month",
    subplots=True,
    color={"Critical CVEs": "darkred", "Total CVEs": "grey"},
)

# Format the y axes with thousands separators
axes.yaxis.set_major_formatter(mpl.ticker.StrMethodFormatter("{x:,.0f}"))

# Caption
txt_caption="Simon Brown, 2022"
fig.figure.text(1, 0.01, txt_caption, wrap=False, horizontalalignment='right', fontsize=8)

txt_source="Source: NIST NVD data"
fig.figure.text(0, 0.01, txt_source, wrap=False, horizontalalignment='left', style='italic', fontsize=8)

fig.get_figure().savefig("monthly_graph.png", dpi=300)
